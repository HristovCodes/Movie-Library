{"version":3,"sources":["Components/Hero/Hero.tsx","Components/SearchForm/SearchForm.tsx","Components/firebase/firebaseapp.js","Components/firebase/firebaseauth.js","hooks.tsx","Components/SignIn/SignIn.tsx","Components/Nav/Nav.tsx","media/placeholder.png","Components/firebase/firebasedatabase.js","Components/Card/Card.tsx","Components/Results/Results.tsx","Components/MovieInfo/MovieInfo.tsx","Components/Favourites/Favourites.tsx","Components/App.tsx","reportWebVitals.ts","reducers.ts","store.tsx","index.tsx"],"names":["Hero","className","SearchForm","setMovies","useState","search","setSearch","history","useHistory","handleSubmit","e","a","preventDefault","fetch","response","json","replace","onSubmit","onChange","target","value","placeholder","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","useDeviceLanguage","provider","GoogleAuthProvider","addScope","signInWithPopup","useAppDispatch","useDispatch","useAppSelector","useSelector","SignIn","state","dispatch","setUser","authUser","payload","displayName","onClick","signOut","then","result","credential","credentialFromResult","user","accessToken","catch","error","errorCode","code","errorMessage","message","email","credentialFromError","console","log","Nav","database","getDatabase","updateData","path","data","update","ref","getData","get","query","exists","val","Card","score","show","removeFromFavourites","movie","stopPropagation","uid","name","remove","alt","src","image","original","placeholderimage","rel","href","url","addToFavourites","id","Results","movies","map","m","MovieInfo","stars","setStars","review","setReview","updateStars","useEffect","r","length","dangerouslySetInnerHTML","__html","summary","onMouseOver","updateReview","onChildRemoved","snapshop","newMovies","filter","mov","v","Object","values","App","mvs","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01b85e5c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Hero.scss\";\n\nexport default function Hero() {\n  return (\n    <section className=\"Hero\">\n      <h1>\n        My <span>Movie</span> Collection\n      </h1>\n    </section>\n  );\n}\n","import React, { FormEvent, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./SearchForm.scss\";\n\nexport default function SearchForm({ setMovies }: any) {\n  const [search, setSearch] = useState(\"\");\n  let history = useHistory();\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const response = await fetch(\n      `https://api.tvmaze.com/search/shows?q=${search}`\n    );\n\n    setMovies(await response.json());\n    history.replace(`/search/${search}`);\n  };\n  return (\n    <form className=\"SearchForm\" aria-label=\"form\" onSubmit={handleSubmit}>\n      <input\n        onChange={(e) => setSearch(e.target.value)}\n        className=\"search\"\n        placeholder=\"Search by movie title...\"\n        type=\"search\"\n      ></input>\n      <button className=\"btnsubmit\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n}\n","import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCZZ4c-gmeJEh9VE7M9loiUsHrL5eDp24A\",\n  authDomain: \"movie-library-e5012.firebaseapp.com\",\n  databaseURL: \"https://movie-library-e5012-default-rtdb.firebaseio.com\",\n  projectId: \"movie-library-e5012\",\n  storageBucket: \"movie-library-e5012.appspot.com\",\n  messagingSenderId: \"987123764512\",\n  appId: \"1:987123764512:web:b7bacf3e0eb2f85fce5b45\",\n};\n\n// Initialize Firebase\nexport const firebase = initializeApp(firebaseConfig);\n","import { GoogleAuthProvider, signInWithPopup, getAuth } from \"firebase/auth\";\nimport { firebase } from \"./firebaseapp\";\n\nexport const auth = getAuth(firebase);\nauth.useDeviceLanguage();\n\nexport const provider = new GoogleAuthProvider();\nprovider.addScope(\"https://www.googleapis.com/auth/contacts.readonly\");\n\nexport default signInWithPopup;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\nimport signInWithPopup, { auth, provider } from \"../firebase/firebaseauth\";\nimport { signOut } from \"@firebase/auth\";\nimport { GoogleAuthProvider } from \"@firebase/auth\";\nimport \"./SignIn.scss\";\nimport { useAppSelector, useAppDispatch } from \"../../hooks\";\nimport { RootState, AppDispatch } from \"../../store\";\n\nexport default function SignIn() {\n  const state = useAppSelector<RootState>((state) => state);\n  const dispatch: AppDispatch = useAppDispatch();\n\n  const setUser = (authUser: any) => {\n    dispatch({ type: \"UPDATE_USER\", payload: authUser });\n  };\n\n  const handleClick = () => {\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential?.accessToken;\n        const user = result.user;\n\n        setUser(user);\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = GoogleAuthProvider.credentialFromError(error);\n\n        console.log(errorCode);\n        console.log(errorMessage);\n        console.log(email);\n        console.log(credential);\n      });\n  };\n  return !state.authUser.displayName ? (\n    <button type=\"button\" onClick={() => handleClick()} className=\"SignIn\">\n      Sign In\n    </button>\n  ) : (\n    <p\n      onClick={() => signOut(auth).then(() => setUser({}))}\n      className=\"UserName\"\n    >\n      {state.authUser.displayName}\n    </p>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport SignIn from \"../SignIn/SignIn\";\nimport \"./Nav.scss\";\n\nexport default function Nav({ setMovies }: any) {\n  let history = useHistory();\n  return (\n    <nav className=\"Nav\">\n      <h2 onClick={() => history.replace(\"/\")}>My Movie Collection</h2>\n      <SearchForm setMovies={setMovies}></SearchForm>\n      <SignIn></SignIn>\n    </nav>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/placeholder.427cf3bd.png\";","import {\n  getDatabase,\n  ref,\n  update,\n  remove,\n  query,\n  get,\n} from \"firebase/database\";\nimport { firebase } from \"./firebaseapp\";\n\nexport const database = getDatabase(firebase);\n\nexport function updateData(path, data) {\n  update(ref(database, `${path}/`), data).catch((e) =>\n    console.log(`${e.code}\\n${e.message}`)\n  );\n}\n\nexport function deleteData(path) {\n  remove(ref(database, `${path}/`)).catch((e) =>\n    console.log(`${e.code}\\n${e.message}`)\n  );\n}\n\nexport async function getData(path) {\n  const response = await get(query(ref(database, `${path}/`)));\n  if (response.exists()) {\n    const data = response.val();\n    return data;\n  }\n  return [];\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport Movie from \"../../reducers\";\nimport placeholderimage from \"../../media/placeholder.png\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\nimport { AppDispatch, RootState } from \"../../store\";\nimport { deleteData, updateData } from \"../firebase/firebasedatabase\";\nimport \"./Card.scss\";\n\nexport default function Card({ score, show }: Movie) {\n  const state = useAppSelector<RootState>((state) => state);\n  const history = useHistory();\n\n  const addToFavourites = (e: React.MouseEvent, movie: Movie) => {\n    e.stopPropagation();\n    updateData(`user/${state.authUser.uid}/${movie.show?.name}`, movie);\n  };\n\n  const removeFromFavourites = (e: React.MouseEvent, movie: Movie) => {\n    e.stopPropagation();\n    deleteData(`user/${state.authUser.uid}/${movie.show?.name}`);\n  };\n\n  const dispatch: AppDispatch = useAppDispatch();\n  const setMovies = (mvs: Movie[]) => {\n    dispatch({ type: \"UPDATE_MOVIES\", payload: mvs });\n  };\n\n  return (\n    <div\n      onClick={() => {\n        setMovies([{ score: score, show: show }]);\n        history.replace(`/Movie-Library/MovieInfo/${show?.name}`);\n      }}\n      className=\"Card\"\n      key={show?.id}\n    >\n      <img\n        alt={show?.name}\n        src={show?.image?.original ? show?.image?.original : placeholderimage}\n      ></img>\n      <h3 className=\"Name\">{show?.name}</h3>\n      <p>\n        Category: <span>{show?.type}</span>\n      </p>\n      <a\n        className=\"Original\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        href={show?.url}\n        onClick={(e) => e.stopPropagation()}\n      >\n        Visit on TVMaze\n      </a>\n      <div className=\"Overlay\">\n        <button\n          onClick={(e) => addToFavourites(e, { score: score, show: show })}\n          type=\"button\"\n        >\n          <span>☆</span>\n        </button>\n        <button\n          onClick={(e) => removeFromFavourites(e, { score: score, show: show })}\n          type=\"button\"\n        >\n          <span>⊖</span>\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Movie from \"../../reducers\";\nimport \"./Results.scss\";\nimport Card from \"../Card/Card\";\n\ninterface ResultsProps {\n  movies: Movie[];\n}\n\nexport default function Results({ movies }: ResultsProps) {\n  return (\n    <section className=\"Results\">\n      <h1 className=\"Heading\">Results:</h1>\n      {movies.map((m: any) => {\n        return <Card key={m.show.id} score={m.score} show={m.show}></Card>;\n      })}\n    </section>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./MovieInfo.scss\";\nimport { useAppSelector } from \"../../hooks\";\nimport Movie from \"../../reducers\";\nimport { getData, updateData } from \"../firebase/firebasedatabase\";\nimport { RootState } from \"../../store\";\n\nexport default function MovieInfo() {\n  const state = useAppSelector<RootState>((state) => state);\n  const [stars, setStars] = useState<string>(\"\");\n  const [review, setReview] = useState<string>(\"\");\n  const movies = useAppSelector<Movie[]>((state) => state.movies);\n\n  const updateStars = () => {\n    if (state.authUser.uid && movies[0]) {\n      updateData(\n        `notes/${state.authUser.uid}/${movies[0].show?.name}/rating/`,\n        {\n          stars: stars,\n        }\n      );\n    }\n  };\n\n  const updateReview = () => {\n    if (state.authUser.uid && movies[0]) {\n      updateData(\n        `notes/${state.authUser.uid}/${movies[0].show?.name}/rating/`,\n        {\n          review: review,\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (stars === \"\" && movies[0] && state.authUser.uid) {\n      getData(\n        `notes/${state.authUser.uid}/${movies[0].show?.name}/rating/`\n      ).then((r) => {\n        setStars(r.stars);\n        setReview(r.review);\n      });\n    }\n  });\n\n  return movies.length ? (\n    <div className=\"MovieInfo\">\n      <article className=\"Grid\">\n        <img\n          alt={movies[0].show?.name}\n          src={movies[0].show?.image?.original}\n        ></img>\n        <h1 className=\"Heading\">{movies[0].show?.name}</h1>\n        <p className=\"Genres\">\n          Category: <span>{movies[0].show?.type}</span>\n        </p>\n        <article\n          dangerouslySetInnerHTML={{\n            __html: `${\n              movies[0].show?.summary\n                ? movies[0].show?.summary\n                : \"<p>No description avaliable.</p>\"\n            }`,\n          }}\n        ></article>\n        <a rel=\"noreferrer\" target=\"_blank\" href={movies[0].show?.url}>\n          Visit on TVMaze\n        </a>\n        <div className=\"Review\">\n          <div className={`StarRatings ${stars}`}>\n            <span\n              onClick={() => updateStars()}\n              onMouseOver={() => setStars(\"one\")}\n            >\n              ★\n            </span>\n            <span\n              onClick={() => updateStars()}\n              onMouseOver={() => setStars(\"two\")}\n            >\n              ★\n            </span>\n            <span\n              onClick={() => updateStars()}\n              onMouseOver={() => setStars(\"three\")}\n            >\n              ★\n            </span>\n            <span\n              onClick={() => updateStars()}\n              onMouseOver={() => setStars(\"four\")}\n            >\n              ★\n            </span>\n            <span\n              onClick={() => updateStars()}\n              onMouseOver={() => setStars(\"five\")}\n            >\n              ★\n            </span>\n          </div>\n          <textarea\n            placeholder={review}\n            onChange={(e) => setReview(e.target.value)}\n          ></textarea>\n          <button\n            value={review}\n            onClick={() => {\n              updateStars();\n              updateReview();\n            }}\n            type=\"button\"\n          >\n            Save note\n          </button>\n        </div>\n      </article>\n    </div>\n  ) : (\n    <div></div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { RootState } from \"../../store\";\nimport Movie from \"../../reducers\";\nimport { useAppSelector } from \"../../hooks\";\nimport \"./Favourites.scss\";\nimport { database, getData } from \"../firebase/firebasedatabase\";\nimport Card from \"../Card/Card\";\nimport { onChildRemoved, query, ref } from \"firebase/database\";\n\nexport default function Results() {\n  const state = useAppSelector<RootState>((state) => state);\n  const [movies, setMovies] = useState<Movie[]>();\n\n  onChildRemoved(\n    query(ref(database, `user/${state.authUser.uid}/`)),\n    (snapshop) => {\n      if (snapshop.exists()) {\n        const newMovies = movies?.filter(\n          (mov) => mov.show?.id !== snapshop.val().show.id\n        );\n        if (newMovies !== movies) setMovies(newMovies);\n      }\n    }\n  );\n\n  useEffect(() => {\n    if (!movies && state.authUser.uid)\n      getData(`user/${state.authUser.uid}/`).then((v) => {\n        setMovies(Object.values(v));\n      });\n  });\n\n  return (\n    <section className=\"Favourites\">\n      <h1 className=\"Heading\">Your Favourite Movies:</h1>\n      {movies?.map((m: any) => {\n        return <Card key={m.show.id} score={m.score} show={m.show}></Card>;\n      })}\n    </section>\n  );\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport Hero from \"./Hero/Hero\";\nimport Nav from \"./Nav/Nav\";\nimport Results from \"./Results/Results\";\nimport MovieInfo from \"./MovieInfo/MovieInfo\";\nimport Favourites from \"./Favourites/Favourites\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\nimport { AppDispatch, RootState } from \"../store\";\nimport Movie from \"../reducers\";\n\nfunction App() {\n  const state = useAppSelector<RootState>((state) => state);\n  const dispatch: AppDispatch = useAppDispatch();\n\n  const setMovies = (mvs: Movie[]) => {\n    dispatch({ type: \"UPDATE_MOVIES\", payload: mvs });\n  };\n\n  return (\n    <Router>\n      <Nav setMovies={setMovies}></Nav>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/Movie-Library/\">\n            <Hero></Hero>\n            <Favourites></Favourites>\n          </Route>\n          <Route path=\"/Movie-Library/Search/\">\n            <Results movies={state.movies}></Results>\n          </Route>\n          <Route path=\"/Movie-Library/MovieInfo/\">\n            <MovieInfo></MovieInfo>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default interface Movie {\n  score?: number;\n  show?: {\n    id: number;\n    url: string;\n    name: string;\n    type: string;\n    language: string;\n    genres: string[];\n    status: string;\n    runtime: number;\n    averageRuntime: number;\n    premiered: string;\n    officialSite: string;\n    schedule: {\n      time: string;\n      days: string[];\n    };\n    rating: {\n      average: number;\n    };\n    weight: number;\n    network: {\n      id: number;\n      name: string;\n      country: {\n        name: string;\n        code: string;\n        timezone: string;\n      };\n    };\n    webChannel: string;\n    dvdCountry: string;\n    externals: {\n      tvrage: number;\n      thetvdb: number;\n      imdb: string;\n    };\n    image: {\n      medium: string;\n      original: string;\n    };\n    summary: string;\n    updated: number;\n    _links: {\n      self: {\n        href: string;\n      };\n      previousepisode: {\n        href: string;\n      };\n    };\n  };\n}\n\ninterface MoviesState {\n  movies: Movie[];\n  authUser: any;\n}\n\n//eslint-disable-next-line\nconst initialState = {\n  movies: [],\n  authUser: {},\n};\n\ntype MoviesAction = { type: \"UPDATE_MOVIES\"; payload: Movie[] };\ntype AuthAction = { type: \"UPDATE_USER\"; payload: any };\ntype Action = MoviesAction | AuthAction;\n\nexport const moviesReducer = (\n  state: MoviesState = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case \"UPDATE_MOVIES\": {\n      return { ...state, movies: action.payload };\n    }\n    case \"UPDATE_USER\": {\n      return { ...state, authUser: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { createStore } from \"@reduxjs/toolkit\";\nimport { moviesReducer } from \"./reducers\";\n\nexport const store = createStore(moviesReducer);\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}